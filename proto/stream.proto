syntax = "proto3";

package stream;

import "google/protobuf/timestamp.proto";
import "google/protobuf/descriptor.proto";

option go_package = "rpc/stream";

extend google.protobuf.FieldOptions {
  string cql = 50001;
}

service StreamService {
  rpc ReceiveUpdates(SubscribeRequest) returns (stream Subscribe);

  rpc Send(ChatMessage) returns (SendResponse);

  rpc Register(AuthRequest) returns (SendResponse);

  rpc OtpValidate(AuthRequestOtp) returns (AuthOTPRequest);
  
  rpc Login(AuthRequest) returns (SendResponse);

  rpc SendQuestion(Question) returns (SendResponse);

  rpc SendAssignment(Assignment) returns (SendResponse);

  rpc CreateRoom(Empty) returns (SendResponse);

  rpc RoomCheck(RoomCheckRequest) returns (RequestRoom);

  rpc WindowPaint(PaintEvent) returns (SendResponse);

  rpc WindowPaintInit(PaintEventInit) returns (SendResponse);

  rpc ValidateAuth(Validator) returns (User);
}

message RequestRoom {
  Room room = 1;
  optional int32 stats_code = 2;
}

message AuthOTPRequest {
  User user = 1;
  bool Success = 2;
  string token = 3;
  optional int32 stats_code = 4;
}

message Empty {};

message RoomCheckRequest {
  string room_id = 1;
}

message Validator {
  string token = 1;
}

message OTP {
  float otp = 1;
}

message AuthRequest {
  string phone = 1;
  bool teach = 2;
}

message AuthRequestOtp {
  string phone = 1;
  int64 code = 2;
}

message User {
  string phone = 1; // @gotags: cql:"phone"
  bool teach = 2; // @gotags: cql:"teach"
  int64 code = 3; // @gotags: cql:"code"
  string username = 4; // @gotags: cql:"username"
  int32 retry_otp = 5; // @gotags: cql:"retry_otp"
  bool verified = 6; // @gotags: cql:"verified"
  google.protobuf.Timestamp expire_otp = 7; // @gotags: cql:"expire_otp"
  google.protobuf.Timestamp create_at = 8; // @gotags: cql:"create_at"
}

message Room {
  string room_id = 1; // @gotags: cql:"room_id"
  string chat_room = 2; // @gotags: cql:"chat_room"
  repeated string users = 3; // @gotags: cql:"users"
}

message PaintEventInit {
  string chat_room = 3;
  bool init = 1;
}

message StreamVertex {
  repeated float position = 1;
  repeated float color = 2;
}

message StreamRect {
  float x = 1;
  float y = 2;
  float width = 3;
  float height = 4;
}

message Assignment {
  string id = 1; // @gotags: cql:"id"
  string question = 2; // @gotags: cql:"question"
  string chat_room = 3; // @gotags: cql:"chat_room"
  bool deleted = 4; // @gotags: cql:"deleted"
}

message StreamTextEntries {
  repeated float position = 1;
  repeated float color = 2;  
  string text = 3;
  bool pending = 4;
  StreamRect bounds = 5;
  int32 font_size = 6;
}

message StreamRectangle {
  repeated float first = 1;
  repeated float last = 2;
  repeated float color = 3;
}

message StreamAction {
  string id = 1;
  repeated StreamVertex vertices = 2;
  StreamTextEntries text = 3;
  StreamRectangle rectangle = 4;
}

message StreamActions {
  repeated StreamAction actions = 1;
}

message WindowPaintHistoryResponse {
  repeated PaintEvent paints = 1;
}

message QuestionsHistoryRequest {
  string chat_room = 1;
}

message QuestionsHistoryResponse {
  repeated Question questions = 1;
}

message SendResponse {
  bool success = 1;
  optional string reason = 2;
  optional string room_id = 3;
  optional int32 stats_code = 4;
}

message ChatMessage {
  string id = 1; // @gotags: cql:"id"
  string chat_room = 2; // @gotags: cql:"chat_room"
  string username = 3; // @gotags: cql:"username"
  string message = 4; // @gotags: cql:"message"
  bool deleted = 5; // @gotags: cql:"deleted"
  google.protobuf.Timestamp timestamp = 6; // @gotags: cql:"timestamp"
}

message PaintEvent {
  oneof action_type {
    bool is_deleted = 1;
    bool action_request = 2;
  };
  repeated StreamActions actions = 3;
  string chat_room = 4;
  google.protobuf.Timestamp timestamp = 5;
}

message Question {
  string id = 1; // @gotags: cql:"id"
  string chat_room = 2; // @gotags: cql:"chat_room"
  string text = 3; // @gotags: cql:"text"
  repeated string answers = 4; // @gotags: cql:"answers"
  bool deleted = 5; // @gotags: cql:"deleted"
  google.protobuf.Timestamp timestamp = 6; // @gotags: cql:"timestamp"
}

message Subscribe {
  oneof data {
    ChatMessage chat_message = 1;
    PaintEvent paint_event = 2;
    Question question = 3;
    PaintEventInit paint_event_init = 4;
    Assignment assignment = 5;
  }
  string chat_room = 6;
  string username = 7;
}

message SubscribeRequest {
  string chat_room = 1;
  string username = 2;
};